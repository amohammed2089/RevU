[project]
name = "revu"
version = "0.1.0"
description = "RevU â€” Enhanced Python Code Reviewer"
requires-python = ">=3.11"

# -----------------------------
# Black (formatting)
# Docs: https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
# -----------------------------
[tool.black]
line-length = 100
target-version = ["py311"]
exclude = """
(
  /(
      \.venv
    | venv
    | build
    | dist
    | \.git
    | \.mypy_cache
    | \.ruff_cache
    | \.pytest_cache
  )/
)
"""

# -----------------------------
# isort (import sorting)
# Docs: https://pycqa.github.io/isort/docs/configuration/config_files.html#pyprojecttoml
# -----------------------------
[tool.isort]
profile = "black"
line_length = 100
combine_as_imports = true
force_sort_within_sections = true
src_paths = ["."]
known_first_party = ["revu"]

# -----------------------------
# Ruff (lint)
# Docs: https://docs.astral.sh/ruff/settings/
# Rule lists: https://docs.astral.sh/ruff/rules/
# -----------------------------
[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
# A well-rounded, production-friendly rule set:
select = [
  "E",   # pycodestyle errors
  "F",   # Pyflakes
  "W",   # pycodestyle warnings
  "I",   # isort (import order) via Ruff
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "SIM", # flake8-simplify
  "PL",  # Pylint-inspired rules
  "RUF", # Ruff-specific rules
  "N",   # pep8-naming
  "RET", # flake8-return
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez (timezone-aware datetimes)
  "T10", # flake8-debugger
  "PGH"  # pygrep-hooks
]
# Ignores tuned to work alongside pydocstyle + Black:
ignore = [
  "E203",  # whitespace before ':' (Black-compatible)
  "W503",  # line break before binary operator (Black-compatible)
  "D203",  # one-blank-line-before-class (conflicts with D211/D212 conventions)
  "D212",  # multi-line docstring summary on next line
]

[tool.ruff.lint.per-file-ignores]
# Tests are often allowed to use asserts, magic numbers, etc.
"tests/**" = ["S101", "PLR2004", "D"]

# -----------------------------
# mypy (typing)
# Docs: https://mypy.readthedocs.io/en/stable/config_file.html#config-file
# -----------------------------
[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_column_numbers = true
pretty = false
ignore_missing_imports = true

# -----------------------------
# pydocstyle (docstrings)
# Docs: https://www.pydocstyle.org/en/stable/usage.html#configuration-files
# -----------------------------
[tool.pydocstyle]
convention = "google"
add-ignore = [
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in __init__
]

# -----------------------------
# Bandit (security)
# NOTE: Many setups still prefer .bandit or CLI flags; some versions may not read this section.
# Docs: https://bandit.readthedocs.io/  (check your Bandit version for pyproject support)
# -----------------------------
[tool.bandit]
exclude_dirs = [".venv", "venv", "build", "dist", "tests", "__pycache__"]
